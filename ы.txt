<div class="ql-editor textarea new-input-ui" data-gramm="false" contenteditable="false" role="textbox" aria-multiline="true" aria-label="Введите запрос" data-placeholder="Спросить Gemini"><p>Хорошо, я нашел причину. Для контекста:</p><p><br></p><p>main.lua:</p><p>local push = require("libs.push")</p><p>require('Engine.core')</p><p><br></p><p>local VERSION = 0.01</p><p><br></p><p>local PW, PH = love.window.getDesktopDimensions()</p><p>local PW, PH = PW * 0.8, PH * 0.8</p><p><br></p><p>local VW, VH = 800,600</p><p><br></p><p>function love.load()</p><p>&nbsp; &nbsp;</p><p>&nbsp; &nbsp; Player = Instance.new("Player")</p><p>&nbsp; &nbsp; workspace.Player = Player</p><p><br></p><p>&nbsp; &nbsp; local TestEvent = Instance.new("Event")</p><p>&nbsp; &nbsp; print(TestEvent.Name)</p><p><br></p><p>&nbsp; &nbsp; -- [ LOVE ]</p><p>&nbsp; &nbsp; love.window.setTitle("Re:Load ver. "..tostring(VERSION))</p><p>&nbsp; &nbsp; love.graphics.setDefaultFilter("nearest", "nearest")</p><p>&nbsp; &nbsp; push:setupScreen(VW, VH, PW, PH, {fullscreen = false, vsync = true, resizable = true})</p><p><br></p><p><br></p><p>end</p><p><br></p><p>function love.keypressed(key, scancode, isrepeat)</p><p>&nbsp; </p><p>end</p><p><br></p><p>function love.update(dt)</p><p>&nbsp; &nbsp;game:Update(dt)</p><p>&nbsp; &nbsp;</p><p>&nbsp; &nbsp; -- Player:Update(dt)</p><p><br></p><p>&nbsp; &nbsp; </p><p>end</p><p><br></p><p>function love.resize(w, h)</p><p>&nbsp; &nbsp; push:resize(w, h)</p><p>end</p><p><br></p><p><br></p><p>function love.draw()</p><p>&nbsp; &nbsp; push:start()</p><p><br></p><p>&nbsp; &nbsp; game:Draw()</p><p><br></p><p>&nbsp; &nbsp; push:finish()</p><p>end</p><p><br></p><p>RunService:</p><p>local RunService = {}</p><p><br></p><p>function RunService:Update(deltaTime)</p><p>&nbsp; &nbsp; for i, object in pairs(workspace) do</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if object.Update and type(object.Update) == "function" then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; object:Update(deltaTime)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; end</p><p>&nbsp; &nbsp; end</p><p>end</p><p><br></p><p>function RunService:Draw()</p><p>&nbsp; &nbsp; for i, object in pairs(workspace) do</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if object.Draw and type(object.Draw) == "function" then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; object:Draw()</p><p>&nbsp; &nbsp; &nbsp; &nbsp; end</p><p>&nbsp; &nbsp; end</p><p>&nbsp; &nbsp;</p><p>end</p><p><br></p><p>return RunService</p><p><br></p><p>Instance:</p><p>local Classes = {}</p><p>Classes.Service = require("Engine.Classes.Service")</p><p>Classes.Event = require("Engine.Classes.Event")</p><p>Classes.Player = require("Engine.Classes.Player")</p><p><br></p><p>local function DeepCopy(orig)</p><p>&nbsp; &nbsp; local copy = {}</p><p><br></p><p>&nbsp; &nbsp; for k, v in pairs(orig) do</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if type(v) == "table" then</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; copy[k] = DeepCopy(v)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; else</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; copy[k] = v</p><p>&nbsp; &nbsp; &nbsp; &nbsp; end</p><p>&nbsp; &nbsp; end</p><p><br></p><p>&nbsp; &nbsp; return copy</p><p>end</p><p><br></p><p>local function findClass(classname)</p><p>&nbsp; &nbsp; return Classes[classname]</p><p>end</p><p><br></p><p><br></p><p><br></p><p>local Instance = {}</p><p><br></p><p>function Instance.new(classname)</p><p>&nbsp; &nbsp; if not findClass(classname) then error("No class "..tostring(classname).." exist!") return end</p><p>&nbsp; &nbsp; </p><p>&nbsp; &nbsp; local self = DeepCopy(Classes[classname])</p><p>&nbsp; &nbsp; self.ClassName = classname</p><p>&nbsp; &nbsp; self.Name = classname</p><p><br></p><p>&nbsp; &nbsp; function self:Clone()</p><p>&nbsp; &nbsp; &nbsp; &nbsp; local clone = DeepCopy(self)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return clone</p><p>&nbsp; &nbsp; end</p><p><br></p><p>&nbsp; &nbsp; function self:Destroy()</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for k in pairs(self) do</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self[k] = nil</p><p>&nbsp; &nbsp; &nbsp; &nbsp; end</p><p>&nbsp; &nbsp; end</p><p><br></p><p><br></p><p>&nbsp; &nbsp; return self</p><p>end</p><p><br></p><p><br></p><p><br></p><p>return Instance</p><p><br></p><p>В общем, если создавать игрока через Instance, то почему то draw становится nil, но если создавать игрока напрямую (workspace.Player = require("Engine.Classes.Player")), то все работает!</p></div>